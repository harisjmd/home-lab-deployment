---
- name: Create Directories for {{ service_name }}
  ansible.builtin.file:
    path: "{{ docker_data_dir }}/{{ service_name }}"
    state: "directory"
    mode: "0755"

- name: Create configuration for {{ service_name }}
  ansible.builtin.template:
    dest: "{{ docker_data_dir }}/{{ service_name }}/conf.yml"
    src: "conf.yml.j2"
    mode: "0755"
  notify: "restart dashy"

- name: Deploy Dashy
  docker_container:
    name: "{{ dashy_container_name }}"
    image: "lissy93/dashy:latest"
    hostname: "{{ dashy_container_name }}"
    pull: true
    state: started
    env:
      "NODE_ENV": "production"
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.dashy-redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.dashy-redirect.redirectscheme.scheme: "https"
      traefik.http.routers.dashy.entrypoints: "websecure"
      traefik.http.routers.dashy.middlewares: "dashy-redirect,dashy-ipwhitelist,gauth@file"
      traefik.http.routers.dashy.rule: Host(`{{ dashy_fqdn }}`)
      traefik.http.routers.dashy.service: "dashy"
      traefik.http.routers.dashy.tls: "true"
      traefik.http.routers.dashy.tls.certresolver: "cloudflared"
      traefik.http.middlewares.dashy-ipwhitelist.ipwhitelist.sourcerange: "{{ traefik_serv_src_ips }}"
      traefik.http.services.dashy.loadbalancer.server.port: "80"
      traefik.http.services.dashy.loadbalancer.passhostheader: "true"
    volumes:
      - "{{ docker_data_dir }}/{{ service_name }}/conf.yml:/app/public/conf.yml"
    restart_policy: unless-stopped
    healthcheck:
      test: ["CMD", "node", "/app/services/healthcheck"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
